#
# mingw/profile/Makefile.in: This file is part of Mingw runtime.
#
# This makefile requires GNU make.

VPATH = @srcdir@
srcdir = @srcdir@
top_srcdir = @top_srcdir@

# FIXME: I see no reason to define `objdir';
# it appears to be unused, and could be removed.
objdir = .

target_alias = @target_alias@
prefix = @prefix@

datarootdir = @datarootdir@
program_transform_name = @program_transform_name@
exec_prefix = @exec_prefix@
bindir = @bindir@
libdir = @libdir@

# FIXME: Use of `target_alias' is extremely suspect here;
# (see relevant note in top level Makefile).
tooldir = $(exec_prefix)/$(target_alias)
datadir = @datadir@
infodir = @infodir@
includedir = @includedir@

SHELL = /bin/sh

INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
mkinstalldirs = $(SHELL) $(srcdir)/../mkinstalldirs
DISTFILES = Makefile.in gcrt0.c gmon.c gmon.h \
  mcount.c profil.c profil.h profile.h CYGWIN_LICENSE COPYING

CC = @CC@
# FIXME: Which is it, CC or CC_FOR_TARGET?
CC_FOR_TARGET = $(CC)
AS_FOR_TARGET = $(AS)
CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@

# compiling with Cygwin?
NO_CYGWIN := @NO_CYGWIN@
ifdef NO_CYGWIN
#
# FIXME: What is the purpose of this hideous kludge?
#
# `CC' should have been appropriately set by the configure script;
# to mess with it, in this fashion, should neither be necessary,
# nor accepted.
#
override CC := ${NO_CYGWIN} $(firstword $(filter-out ${NO_CYGWIN},${CC}))
endif

# Either crtdll (CRT_ID 1) or msvcrt (CRT_ID 2).
RUNTIME = @RUNTIME@
CRT_ID = @CRT_ID@

# Needed for threading dll.
THREAD_DLL = @THREAD_DLL@
THREAD_DLL_VERSION = 10
THREAD_DLL_NAME = $(THREAD_DLL)$(THREAD_DLL_VERSION).dll

W32API_INCLUDE = @W32API_INCLUDE@
INCLUDES = -I${srcdir} -I${top_srcdir}/include \
  -nostdinc \
  -iwithprefixbefore include
ALL_CFLAGS = $(CFLAGS) $(INCLUDES) $(W32API_INCLUDE)
ALL_CXXFLAGS = $(CXXFLAGS) $(INCLUDES) -nostdinc++ $(W32API_INCLUDE)

AS = @AS@
AR = @AR@
LD = @LD@
AR_FLAGS = rcv
RANLIB = @RANLIB@
DLLTOOL = @DLLTOOL@
DLLTOOLFLAGS = 
DLLTOOL_FOR_TARGET = $(DLLTOOL)
DLLTOOL_FLAGS = --as $(AS_FOR_TARGET)

LIBGMON_A = @LIBGMON_A@
LIBGMON_OBJS = gmon.o mcount.o profil.o
CRT0S = @CRT0S@
ALL_CRT0S = gcrt0.o gcrt1.o gcrt2.o

LIBS = $(LIBGMON_A)
DLLS = 

all: $(LIBGMON_A)

$(LIBGMON_A): $(LIBGMON_OBJS) $(CRT0S)
	$(AR) $(ARFLAGS) $@ $(LIBGMON_OBJS)
	$(RANLIB) $@

# FIXME: These are really the same, but gcc specs want different names.
# The only CRT dependency is atexit.
gcrt0.o: gcrt0.c
	$(CC)  -c -o $@ $(CPPFLAGS) $(ALL_CFLAGS) $?

gcrt1.o: gcrt0.c
	$(CC) -U__MSVCRT__ -c -o $@ $(CPPFLAGS) $(ALL_CFLAGS) $?

gcrt2.o: gcrt0.c
	$(CC) -D__MSVCRT__ -c -o $@ $(CPPFLAGS) $(ALL_CFLAGS) $?

#
# Dependencies
#
gmon.o: gmon.c gmon.h profile.h profil.h
mcount.o: mcount.c gmon.h profile.h
profil.o: profil.c profil.h

top_builddir = @top_builddir@

Makefile: Makefile.in ${top_builddir}/config.status ${top_srcdir}/configure
	cd ${top_builddir}; $(SHELL) config.status

${top_builddir}/config.status: ${top_srcdir}/configure
	cd ${top_builddir}; $(SHELL) config.status --recheck

info:

info-html:

install-info: info

need-DESTDIR-compatibility = prefix libdir includedir
.PHONY: $(need-DESTDIR-compatibility) fail-DESTDIR-compatibility

$(need-DESTDIR-compatibility):
	@test -z "$(DESTDIR)" || case "$($@)" in ?:*) \
	  $(MAKE) --no-print-directory reject="$@" fail-DESTDIR-compatibility ;; \
	esac

fail-DESTDIR-compatibility:
	$(error DESTDIR is not supported when $(reject) contains Win32 path `$($(reject))'; \
	try `make install $(reject)=$(shell echo '$($(reject))' | sed s,:,:$(DESTDIR),) ...' instead)

install: all $(need-DESTDIR-compatibility)
	$(mkinstalldirs) $(DESTDIR)$(inst_libdir) 
	for i in $(LIBS); do \
		$(INSTALL_DATA) $$i $(DESTDIR)$(inst_libdir)/$$i ; \
	done
	for i in $(CRT0S); do \
		$(INSTALL_DATA) $$i $(DESTDIR)$(inst_libdir)/$$i ; \
	done
	for sub in . ; do \
	$(mkinstalldirs) $(DESTDIR)$(inst_includedir)/$$sub ; \
		for i in $(srcdir)/$$sub/*.h ; do \
		  $(INSTALL_DATA) $$i $(DESTDIR)$(inst_includedir)/$$sub/`basename $$i` ; \
		done ; \
	done

clean:
	-rm -f $(LIBGMON_OBJS) $(ALL_CRT0S) $(LIBGMON_A)

distclean:
	-rm -f *.o *.a *~ core a.out
	-rm -f config.cache config.status config.log 
	-rm -f Makefile
.c.o:
	$(CC) -c $(ALL_CPPFLAGS) $(ALL_CFLAGS) $< -o $@

dist:
	mkdir $(distdir)/profile
	chmod 755 $(distdir)/profile
	@for i in $(DISTFILES); do\
		cp -p $(srcdir)/$$i $(distdir)/profile/$$i ; \
	done

# $RCSfile$: end of file
