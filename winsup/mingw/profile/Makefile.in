#
# mingw/profile/Makefile.in: This file is part of Mingw runtime.
#
# This makefile requires GNU make.

VPATH = @srcdir@
srcdir = @srcdir@
objdir = .

target_alias = @target_alias@
prefix = @prefix@

program_transform_name = @program_transform_name@
exec_prefix = @exec_prefix@
bindir = @bindir@
libdir = @libdir@
tooldir = $(exec_prefix)/$(target_alias)
datadir = @datadir@
infodir = @infodir@
includedir = @includedir@

SHELL = /bin/sh

INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
mkinstalldirs = $(SHELL) $(srcdir)/../mkinstalldirs
DISTFILES = Makefile.in configure configure.in gcrt0.c gmon.c gmon.h mcount.c \
profil.c profil.h profile.h

CC = @CC@
# FIXME: Which is it, CC or CC_FOR_TARGET?
CC_FOR_TARGET = $(CC)
AS_FOR_TARGET = $(AS)
CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@

# compiling with Cygwin?
MNO_CYGWIN = @MNO_CYGWIN@

# Either crtdll (CRT_ID 1) or msvcrt (CRT_ID 2).
RUNTIME = @RUNTIME@
CRT_ID = @CRT_ID@

# Needed for threading dll.
THREAD_DLL = @THREAD_DLL@
THREAD_DLL_VERSION = 10
THREAD_DLL_NAME = $(THREAD_DLL)$(THREAD_DLL_VERSION).dll

INCLUDES = -I$(srcdir) -I$(srcdir)/../include \
  -I$(srcdir)/../../w32api/include \
  -nostdinc -nostdinc++ \
  -iwithprefixbefore include
ALL_CFLAGS = $(CFLAGS) $(INCLUDES) $(MNO_CYGWIN)
ALL_CXXFLAGS = $(CXXFLAGS) $(INCLUDES) $(MNO_CYGWIN)

AS = @AS@
AR = @AR@
LD = @LD@
AR_FLAGS = rcv
RANLIB = @RANLIB@
DLLTOOL = @DLLTOOL@
DLLTOOLFLAGS = 
DLLTOOL_FOR_TARGET = $(DLLTOOL)
DLLTOOL_FLAGS = --as $(AS_FOR_TARGET)

LIBGMON_A = @LIBGMON_A@
LIBGMON_OBJS = gmon.o mcount.o profil.o
CRT0S = @CRT0S@
ALL_CRT0S = gcrt0.o gcrt1.o gcrt2.o

LIBS = $(LIBGMON_A)
DLLS = 

all: $(LIBGMON_A)

$(LIBGMON_A): $(LIBGMON_OBJS) $(CRT0S)
	$(AR) $(ARFLAGS) $@ $(LIBGMON_OBJS)
	$(RANLIB) $@

# FIXME: These are really the same, but gcc specs want different names.
# The only CRT dependency is atexit.
gcrt0.o: gcrt0.c
	$(CC)  -c -o $@ $(CPPFLAGS) $(CFLAGS) $?

gcrt1.o: gcrt0.c
	$(CC) -U__MSVCRT__ -c -o $@ $(CPPFLAGS) $(CFLAGS) $?

gcrt2.o: gcrt0.c
	$(CC) -D__MSVCRT__ -c -o $@ $(CPPFLAGS) $(CFLAGS) $?

Makefile: Makefile.in config.status configure
	$(SHELL) config.status

config.status: configure
	$(SHELL) config.status --recheck

info:

info-html:

install-info: info

install: all
	$(mkinstalldirs) $(inst_libdir) 
	for i in $(LIBS); do \
		$(INSTALL_DATA) $$i $(inst_libdir)/$$i ; \
	done
	for i in $(CRT0S); do \
		$(INSTALL_DATA) $$i $(inst_libdir)/$$i ; \
	done
	for sub in . ; do \
	$(mkinstalldirs) $(inst_includedir)/$$sub ; \
		for i in $(srcdir)/$$sub/*.h ; do \
		  $(INSTALL_DATA) $$i $(inst_includedir)/$$sub/`basename $$i` ; \
		done ; \
	done

clean:
	-rm -f $(LIBGMON_OBJS) $(ALL_CRT0S) $(LIBGMON_A)

distclean:
	-rm -f *.o *.a *~ core a.out
	-rm -f config.cache config.status config.log 
	-rm -f Makefile
.c.o:
	$(CC) -c $(ALL_CPPFLAGS) $(ALL_CFLAGS) $< -o $@

dist:
	mkdir $(distdir)/profile
	chmod 755 $(distdir)/profile
	@for i in $(DISTFILES); do\
		cp -p $(srcdir)/$$i $(distdir)/profile/$$i ; \
	done
