# Makefile.in for Cygwin.
# Copyright 1995, 1996, 1997, 1998, 1999, 2000 Cygnus Solutions.
#
# This file is part of Cygwin.
#
# This software is a copyrighted work licensed under the terms of the
# Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
# details.

# This makefile requires GNU make.

SHELL:=@SHELL@
srcdir:=@srcdir@
objdir:=.

CONFIG_DIR:=$(srcdir)/config/@CONFIG_DIR@
VPATH:=$(srcdir):$(CONFIG_DIR):$(srcdir)/regexp:$(srcdir)/lib

target_alias:=@target_alias@
build_alias:=@build_alias@
host_alias:=@host_alias@
prefix:=@prefix@

program_transform_name:=@program_transform_name@
exec_prefix:=@exec_prefix@
bindir:=@bindir@
libdir:=@libdir@
ifeq ($(target_alias),$(host_alias))
ifeq ($(build_alias),$(host_alias))
tooldir:=$(exec_prefix)
else
tooldir:=$(exec_prefix)/$(target_alias)
endif
else
tooldir:=$(exec_prefix)/$(target_alias)
endif
datadir:=@datadir@
infodir:=@infodir@
includedir:=@includedir@

INSTALL:=@INSTALL@
INSTALL_PROGRAM:=@INSTALL_PROGRAM@

#
# --enable options from configure
#
MT_SAFE = @MT_SAFE@
DEFS = @DEFS@

CC:=@CC@
# FIXME: Which is it, CC or CC_FOR_TARGET?
CC_FOR_TARGET:=$(CC)
CFLAGS:=@CFLAGS@
CFLAGS+=-MD -fbuiltin
CXXFLAGS:=@CXXFLAGS@

# For linking mount, etc. crt0.o isn't accessable in a fresh build.
EXE_LDFLAGS:=@EXE_LDFLAGS@

AR:=@AR@
AR_FLAGS:=qv
RANLIB:=@RANLIB@
LD:=@LD@
DLLTOOL:=@DLLTOOL@
WINDRES:=@WINDRES@
AS:=@AS@

#
# Include common definitions for winsup directory
#
include $(srcdir)/../Makefile.common

INSTALL_DATA:=$(SHELL) $(updir1)/install-sh -c

@SET_MAKE@

# Setup the testing framework, if you have one
EXPECT = `if [ -f $${rootme}/../../expect/expect$(EXEEXT) ] ; then \
            echo $${rootme}/../../expect/expect$(EXEEXT) ; \
          else echo expect ; fi`

RUNTEST = `if [ -f $${srcdir}/../dejagnu/runtest ] ; then \
	       echo $${srcdir}/../dejagnu/runtest ; \
	    else echo runtest; fi`
RUNTESTFLAGS =

# Parameters used in building the cygwin.dll.
# We build as new-cygwin.dll and rename at install time to overcome
# native rebuilding issues (we don't want the build tools to see a partially
# built cygwin.dll and attempt to use it instead of the old one).

DLL_NAME:=cygwin1.dll
LIB_NAME:=libcygwin.a
DEF_FILE:=cygwin.def
DLL_ENTRY:=@DLL_ENTRY@

LIBGMON_A:=libgmon.a
GMON_START:=gcrt0.o

# Some things want these from libc, but they have their own static
# data which apps can get to, which is a pain in the dll, so we
# include them directly into the library.

LIBCOS:=${sort ${addsuffix .o,${basename ${notdir ${wildcard $(srcdir)/lib/*.c}}}} \
	       ${addsuffix .o,${basename ${notdir ${wildcard $(srcdir)/lib/*.cc}}}}}

# Build all source files in the config directory

EXTRA_DLL_OFILES:=${addsuffix .o,${basename ${notdir ${wildcard $(CONFIG_DIR)/*.c}}}}

EXTRA_OFILES=$(bupdir1)/libiberty/random.o $(bupdir1)/libiberty/strsignal.o

DLL_IMPORTS:=$(w32api_lib)/libkernel32.a

DLL_OFILES:=assert.o cygheap.o dcrt0.o debug.o delqueue.o dir.o dlfcn.o \
	dll_init.o dtable.o environ.o  errno.o exceptions.o exec.o external.o \
	fcntl.o fhandler.o fhandler_clipboard.o fhandler_console.o \
	fhandler_floppy.o fhandler_mem.o fhandler_random.o fhandler_raw.o \
	fhandler_serial.o fhandler_socket.o fhandler_tape.o \
	fhandler_termios.o fhandler_tty.o fhandler_windows.o fhandler_zero.o \
	fork.o glob.o grp.o heap.o init.o ioctl.o localtime.o malloc.o \
	miscfuncs.o mmap.o \
	net.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o pthread.o regexp.o \
	regerror.o regsub.o registry.o resource.o scandir.o security.o select.o \
	shared.o signal.o sigproc.o smallprint.o spawn.o strace.o strsep.o \
	sync.o syscalls.o sysconf.o syslog.o termios.o thread.o times.o tty.o \
	uinfo.o uname.o wait.o window.o \
	$(EXTRA_DLL_OFILES) $(EXTRA_OFILES) $(MT_SAFE_OBJECTS)

GMON_OFILES:= gmon.o mcount.o profil.o

LD_STUFF=--dll $(DLL_OFILES) version.o winver.o $(DLL_IMPORTS) $(LIBM) $(LIBC) \
	 $(LIBGCC) -e $(DLL_ENTRY) --image-base=0x61000000

.PHONY: all force dll_ofiles install all_target install_target all_host install_host

.SUFFIXES:
.SUFFIXES: .c .cc .def .a .o .d

all_host=@all_host@
install_host=@install_host@

all: new-$(DLL_NAME) $(all_host) all_target

all_target: $(LIBGMON_A) $(LIB_NAME) binmode.o textmode.o

all_host: new-$(LIB_NAME) cygrun.exe

force:

install: all $(install_host) $(install_target)
	$(INSTALL_DATA) new-$(DLL_NAME) $(bindir)/$(DLL_NAME); \
	for i in $(LIB_NAME) $(GMON_START) $(LIBGMON_A) binmode.o textmode.o ; do \
	    $(INSTALL_DATA) $$i $(tooldir)/lib/$$i ; \
	done ; \
	cd $(srcdir); \
	for sub in `find include -name '[a-z]*' -type d -print | sort`; do \
	    for i in $$sub/*.h ; do \
	      $(INSTALL_DATA) $$i $(tooldir)/$$sub/`basename $$i` ; \
	    done ; \
	done ; \
	$(INSTALL_DATA) regexp/regexp.h $(tooldir)/include/regexp.h

install_host:

clean:
	-rm -f *.o *.dll *.a *.exp junk *.base version.cc regexp/*.o winver_stamp *.exe *.d

maintainer-clean realclean: clean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -fr configure

# Rule to build libcygwin.a

$(LIB_NAME): $(DEF_FILE) $(LIBCOS)
	$(DLLTOOL) --as=$(AS) --dllname $(DLL_NAME) --def $(DEF_FILE) --output-lib temp.a
	$(AR) rcv temp.a $(LIBCOS)
	mv temp.a $(LIB_NAME)

# Rule to make stub library used by testsuite

new-$(LIB_NAME): $(DEF_FILE) $(LIBCOS)
	$(DLLTOOL) --as=$(AS) --dllname new-$(DLL_NAME) --def $(DEF_FILE) --output-lib temp.a
	$(AR) rcv temp.a $(LIBCOS)
	mv temp.a new-$(LIB_NAME)

# Rule to build cygwin.dll

new-$(DLL_NAME): $(DLL_OFILES) $(DEF_FILE) $(DLL_IMPORTS) $(LIBC) $(LIBM) Makefile winver_stamp
	$(LD) -shared -o $@ -e $(DLL_ENTRY) $(DEF_FILE) $(DLL_OFILES) version.o \
	winver.o $(DLL_IMPORTS) $(LIBM) $(LIBGCC) $(MALLOC_OBJ) $(LIBC) $(LIBGCC)

dll_ofiles: $(DLL_OFILES)

$(LIBGMON_A): $(GMON_OFILES) $(GMON_START)
	$(AR) rcv $(LIBGMON_A) $(GMON_OFILES)

version.cc winver.o: winver_stamp
	@ :

winver_stamp: mkvers.sh include/cygwin/version.h winver.rc $(DLL_OFILES)
	@echo "Making version.o and winver.o";\
	$(SHELL) ${word 1,$^} ${word 2,$^} ${word 3,$^} $(WINDRES) && \
	touch $@ && \
	$(COMPILE_CXX) -o version.o version.cc

cygrun.exe : cygrun.o $(LIB_NAME) $(w32api_lib)/libuser32.a \
	     $(w32api_lib)/libshell32.a $(w32api_lib)/libkernel32.a
	$(CC) -nodefaultlibs -o $@ $^ $(LIBGCC)

#

Makefile: cygwin.din

$(DEF_FILE): cygwin.din config.status
	$(SHELL) config.status

winsup.h: config.h

ifneq (,${wildcard *.d})
include *.d
endif
