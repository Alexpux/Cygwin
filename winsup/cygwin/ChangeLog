2004-02-15  Christopher Faylor  <cgf@redhat.com>

	* cygheap.cc (_csbrk): Report more debugging details on failing
	condition.

2004-02-14  Christopher Faylor  <cgf@redhat.com>

	* Makefile.in: Compile syscalls.o with -fomit-frame-pointer.

	* sigproc.cc: Eliminate unused variable.

2004-02-14  Corinna Vinschen  <corinna@vinschen.de>

	* getopt.c: Replace with latest NetBSD version 1.16.  Keep Cygwin
	specific changes as minimal as possible.

2004-02-13  Christopher Faylor  <cgf@redhat.com>

	* sigproc.cc (proc_subproc): Change warning back to silent debug
	output.

2004-02-13  Christopher Faylor  <cgf@redhat.com>

	* dcrt0.cc (alloc_stack_hard_way): Revert to previous implementation.
	(alloc_stack): Ditto.
	* exceptions.cc (ctrl_c_handler): Add debugging output.

2004-02-13  Christopher Faylor  <cgf@redhat.com>

	* Makefile.in (clean): Remove sigfe.s.
	(sigfe.s): Ensure that sigfe.s will be regenerated if it does not exist.
	* dll_init.cc (dll_dllcrt0): Simplify initializing tests.

	* exceptions.cc (setup_handler): Detect when stub caller is either
	spinning or has acquired the lock after being suspended to avoid
	windows problems with suspending a win32 API call.

	* cygtls.h (_cygtls::spinning): Declare new element.
	* gendef: Remove unused _siglist_index and _siglist declaration.
	(_sigfe): Set spinning element when potentially looping, waiting for lock.
	(_sigbe): Ditto.
	(_cygtls::lock): Ditto.
	(_longjmp): Ditto.
	* tlsoffsets.h: Regenerate.
	* pinfo.cc (_pinfo::exit): Set final exit state here.  Call sigproc_terminate if
	invoked with 'norecord'.  Clear any residual _cygtls stuff.
	* winsup.h (exit_states): Define ES_FINAL.
	* spawn.cc (spawn_guts): Don't call proc_terminate specifically when
	execing.  Let _pinfo::exit handle that case.

	* sigproc.cc (wait_subproc): Always exit loop early when proc_loop_wait.

	* init.cc (munge_threadfunc): Eliminate unused argument.
	(dll_entry): Reflect above change in call to munge_threadfunc.

2004-02-11  Christopher Faylor  <cgf@redhat.com>

	* gendef (_sigbe): Zero location on pop.
	(_cygtls::pop): Ditto.

2004-02-11  Christopher Faylor  <cgf@redhat.com>

	* dcrt0.cc (alloc_stack_hard_way): Eliminate second argument.
	(alloc_stack): Remove use of 'b' throughout.

2004-02-11  Christopher Faylor  <cgf@redhat.com>

	Rename _threadinfo to _cygtls, throughout.
	* cygtls.h (_cygtls::call_signal_handler): Rename from
	call_signal_handler_now.
	(_cygtls::push): Make second argument mandatory.
	(_cygtls::fixup_after_fork): Declare new function.
	(_cygtls::lock): Ditto.
	* cygtls.cc (_cygtls::fixup_after_fork): Define new function.
	* dcrt0.cc (cygwin_finished_initializing): Define as bool.
	(alloc_stack): Use _tlstop rather than arbitrary variable in probably
	vain attempt to avoid strange fork problem on CTRL-C.
	(dll_crt0_0): Remove obsolete winpids::init call.
	* dll_init.cc (dll_dllcrt0): Detect forkee condition as equivalent to
	initializing.
	* winsup.h (cygwin_finished_initializing): Declare as bool.
	* exceptions.cc (handle_exceptions): Rely on
	cygwin_finished_initializing to determine how to handle exception
	during process startup.
	(_cygtls::call_signal_handler): Rename from call_signal_handler_now.
	(_cygtls::interrupt_now): Fill in second argument to push.
	(signal_fixup_after_fork): Eliminate.
	(setup_handler): Initialize locked to avoid potential inappropriate
	unlock.  Resume thread if it has acquired the stack lock.
	(ctrl_c_handler): Just exit if ctrl-c is hit before cygiwn has finished
	initializing.
	* fork.cc (sync_with_child): Don't call abort since it can cause exit
	deadlocks.
	(sync_with_child): Change debugging output slightly.
	(fork_child): Set cygwin_finished_initializing here.  Call _cygtls fork
	fixup and explicitly call sigproc_init.
	(fork_parent): Release malloc lock on fork failure.
	(vfork): Call signal handler via _my_tls.
	* sigproc.cc (sig_send): Ditto.
	* syscalls.cc (readv): Ditto.
	* termios.cc (tcsetattr): Ditto.
	* wait.cc (wait4): Ditto.
	* signal.cc (nanosleep): Ditto.
	(abort): Ditto.
	(kill_pgrp): Avoid killing self if exiting.
	* sync.cc (muto::acquire): Remove (temporarily?) ill-advised
	exiting_thread check.
	* gendef (_sigfe): Be more agressive in protecting stack pointer from
	other access by signal thread.
	(_cygtls::locked): Define new function.
	(_sigbe): Ditto.
	(_cygtls::pop): Protect edx.
	(_cygtls::lock): Use guaranteed method to set eax to 1.
	(longjmp): Aggressively protect signal stack.
	* miscfuncs.cc (low_priority_sleep): Reduce "sleep time" for secs == 0.
	* pinfo.cc (winpids::set): Counterintuitively use malloc's lock to
	protect simultaneous access to the pids list since there are
	pathological conditions which can cause malloc to call winpid.
	(winpids::init): Eliminate.
	* pinfo.h (winpids::cs): Eliminate declaration.
	* pinfo.h (winpids::init): Eliminate definition.

2004-02-11  Corinna Vinschen  <corinna@vinschen.de>

	* security.cc (get_nt_object_attribute): Fix error handling.

2004-02-09  Ralf Habacker  <ralf.habacker@freenet.de>

	* fhandler_socket.cc (fhandler_socket::ioctl): Add FIONREAD handling.

2004-02-08  Christopher Faylor  <cgf@redhat.com>

	* debug.h (console_printf): Define for non-debugging condition.

	* cygtls.h (_threadinfo::lock): Remove wait argument.
	(_threadinfo::interrupt_setup): Remove retaddr argument.
	* exceptions.cc (_threadinfo::interrupt_setup): Ditto.
	(_threadinfo::interrupt_now): Accommodate change to interrupt_setup
	argument.
	(setup_handler): Ditto.  Always lock sig stack prior to determining
	interrupt method.
	* gendef (_sigfe): Correct thinko regarding cmpxchg.
	(_sigbe): Ditto.
	(_threadinfo::lock): Ditto.
	(_threadinfo::pop): Eliminate left-over stack unlock.
	* sigproc.cc (proc_subproc): Change debugging output to printed
	warning.

2004-02-08  Christopher Faylor  <cgf@redhat.com>

	* localtime.cc (localtime_r): Call tzset.

	* Makefile.in: Make version.h/cygwin.din version check a warning since
	it is not foolproof.

	* cygheap.h (CYGHEAPSIZE): Bump size down.

	* cygtls.h (_threadinfo::stacklock): New element.
	(_threadinfo::pop): Make regparm.
	(_threadinfo::lock): New function.
	(_threadinfo::unlock): New function.
	* cygtls.cc (_threadinfo::push): Wait for a lock on the stack before
	performing the operation.
	(_threadinfo::pop): Move to another file.
	* cygwin.din: More SIGFE changes.
	* exceptions.cc (try_to_debug): Always display messages on console.
	(handle_exceptions): Unwind stack only when actually about to call
	sig_send.
	(setup_handler): Lock stack prior to performing any operations.
	* gendef (_sigfe): Ditto.
	(_sigbe): Ditto.
	(_threadinfo::pop): Ditto.  Move here.
	* gen_tlsoffsets: Generate positive offsets.
	* tlsoffsets.h: Regenerate.

2004-02-06  Corinna Vinschen  <corinna@vinschen.de>

	* cygserver.h (CYGWIN_SERVER_VERSION_API): Bump.
	* cygserver_ipc.h (struct proc): Add signal_arrived member.
	(ipc_set_proc_info): Inititalize blk.signal_arrived.

2004-02-06  Pierre Humblet <pierre.humblet@ieee.org>

	* uinfo.cc (cygheap_user::init): Use sec_user_nih to build a
	security descriptor. Set both the process and the default DACLs.
	* fork.cc (fork_parent): Use sec_none_nih security attributes.
	* spawn.cc (spawn_guts): Ditto.

2004-02-05  Christopher Faylor  <cgf@redhat.com>

	* cygwin.din: Make many more functions SIGFE.
	* include/cygwin/version.h (CYGWIN_VERSION_SHARED_DATA): Bump.

2004-02-05  Pierre Humblet <pierre.humblet@ieee.org>

	* security.h (SID): New macro.
	(well_known_*_sid): Change type to cygpsid.
	(cygsid::init): Delete declaration.
	* sec_helper.cc (well_known_*_sid): Define using above SID macro.
	(cygsid::init): Delete.
	* dcrt0.cc (dll_crt0_0): Do not call cygsid::init.
	* security.cc (get_user_local_groups): Change the second argument type
	to cygpsid.

2004-02-03  Christopher Faylor  <cgf@redhat.com>

	* cygtls.h (_local_storage::signamebuf): Increase size to prevent
	overflow on really odd values.
	* tlsoffsets.h: Regenerate.

2004-02-03  Christopher Faylor  <cgf@redhat.com>

	* Makefile.in (DLL_OFILES): Add strsig.o.
	* cygtls.h (_local_storage::signamebuf): New element.
	* sysconf.cc (sysconf): Implement _SC_RTSIG_MAX.
	* tlsoffsets.h: Regenerate.
	* include/limits.h (_POSIX_RTSIG_MAX): New define.
	(RTSIG_MAX): Ditto.
	* include/cygwin/signal.h (SIGRTMIN): New define.
	(SIGRTMAX): Ditto.
	(NSIG): Bump.
	* strsig.cc: New file.

2004-02-03  Jason Tishler <jason@tishler.net>

	* window.cc (Winmain): Show windows error code in error output when
	RegisterClass fails.

2004-02-02  Christopher Faylor  <cgf@redhat.com>

	* fhandler.h (*::fixup_after_exec): Eliminate unused handle argument.
	* fhandler.h (dtable::fixup_after_exec): Eliminate unused handle
	argument.
	* dcrt0.cc (dll_crt0_1): Reflect elimination of unused handle argument
	to fixup_after_exec.
	* dtable.cc (dtable::fixup_after_exec): Ditto.
	* fhandler_console.cc (fhandler_console::fixup_after_exec): Ditto.
	* fhandler_dsp.cc (fhandler_dsp::fixup_after_exec): Ditto.
	* fhandler_raw.cc (fhandler_raw::fixup_after_exec): Ditto.
	* fhandler_socket.cc (fhandler_socket::fixup_after_exec): Ditto.
	* fhandler_virtual.cc (fhandler_virtual::fixup_after_exec): Ditto.
	* pipe.cc (fhandler_pipe::fixup_after_exec): Ditto.

2004-02-02  Pierre Humblet <pierre.humblet@ieee.org>

	* spawn.cc (spawn_guts): Do not set ciresrv.parent.
	* child_info.h (child_info_spawn::~child_info_spawn): Do not close
	parent.  Update CURR_CHILD_INFO_MAGIC.
	* dcrt0.cc (dll_crt0_0): Do not close spawn_info->parent.  Pass NULL to
	cygheap->fdtab.fixup_after_exec().

2004-02-02  Christopher Faylor  <cgf@redhat.com>

	Throughout, change name from set_inheritance to set_no_inheritance to
	better reflect input arguments of this function.

	* cygheap.h (CYGHEAPSIZE): Increase size of cygheap to something closer
	to the 21st century.

2004-02-02  Corinna Vinschen  <corinna@vinschen.de>

	* cygerrno.h (set_errno): Replace semicolon with comma in non-DEBUGGING
	version to avoid compile time error.

2004-02-01  Christopher Faylor  <cgf@redhat.com>

	* cygerrno.h (set_errno): Set global errno whenever setting thread
	specific version.
	* debug.cc (__set_errno): Ditto.

	* exceptions.cc (handle_sigsuspend): Remove spurious
	sig_dispatch_pending call.
	(set_signal_mask): When there seem to be pending signals to dispatch,
	tell signal_dispatch_pending/sig_send not to specifically call any
	handlers.
	* sigproc.h (sig_dispatch_pending): Change declaration to void.
	* sigproc.cc (sig_dispatch_pending): Change definition to void.  Take
	an argument to determine whether to tell sig_send to wait for handler
	to be called.
	* sigproc.cc (sig_send): Don't call signal handler when sig ==
	__SIGFLUSHFAST.
	(wait_sig): Honor __SIGFLUSHFAST.  Guard against sigpacket::process
	nuking si_signo.
	* sigproc.h (__SIGFLUSHFAST): Define new special signal.
	(sig_dispatch_pending): Change declaration to void.  Take optional
	boolean argument.

	* fork.cc (vfork): Add debugging output.

2004-01-26  Christopher Faylor  <cgf@redhat.com>

	* exceptions.cc (sig_handle_tty_stop): Avoid races by waiting for both
	signal_arrived and for sigCONT.
	(sigpacket::process): Enforce sending of both signal_arrived and
	sigCONT, where appropriate.
	* gendef (sigreturn): Save tls pointer in ebx so that it can jump into
	sigdelayed and use the same register.

2004-01-26  Christopher Faylor  <cgf@redhat.com>

	* cygtls.cc (_threadinfo::init_thread): Add more local reent stdio
	initialization.
	* dcrt0.cc (initial_env): Can it really be true that XP doesn't allow
	attaching a debugger during DLL attach?  Add temporary workaround.
	(dll_crt0_0): Ensure that _impure_ptr stdio is initialized before any
	threads.
	(dll_crt0_1): Move _impure_ptr initialization to dll_crt0_0.
	* exceptions.cc (try_to_debug): Reinstate old method for looping while
	debugging.
	* syscalls.cc (_cygwin_istext_for_stdio): Regularize debugging output.
	Remove hopefully extraneous check.
	(setmode_helper): Add debugging output for improbable case.  Use
	"binary" rather "raw" for consistency.

2004-01-25  Christopher Faylor  <cgf@redhat.com>

	* fhandler.cc (fhandler_base::fhaccess): Avoid always setting errno to
	EACCESS when return value is < 0.  Rely on errno being set properly.

2004-01-25  Christopher Faylor  <cgf@redhat.com>

	* sigproc.cc (proc_subproc): Don't protect *child's* handle.

2004-01-24  Christopher Faylor  <cgf@redhat.com>

	* fhandler.h (fhandler_base::fhaccess): Return int for compatibility
	with access.
	* fhandler.cc (fhandler_base::fhaccess): Return int.  Use consistent
	variable name for exit value.  Exit at bottom, printing debugging
	information, like other cygwin functions.

2004-01-23  Christopher Faylor  <cgf@redhat.com>

	* cygheap.cc (init_cygheap::close_ctty): Protect YA vforkism.
	* fhandler.h (fhandler_base::has_acls): Make pass through for path_conv
	method.
	(fhandler_base::isremote): Ditto.
	(fhandler_base::is_fs_special): Ditto.
	(fhandler_base::has_attribute): Ditto.  Define new function.
	(fhandler_base::fhaccess): Declare new function based on access_worker.
	(fhandler_base::set_has_acls): Eliminate obsolete function.
	(fhandler_base::set_isremote): Ditto.
	* fhandler.cc (fhandler_base::fhaccess): Move from syscalls.cc and into
	fhandler_base class.  Use fhandler methods to access data rather than
	path_conv stuff.
	(fhandler_base::device_access_denied): Use fhaccess method.
	* fhandler_disk_file.cc (fhandler_disk_file::opendir): Ditto.
	(fhandler_base::open_fs): Remove calls to obsolete functions.
	* fhandler_virtual.cc (fhandler_virtual::open): Ditto.
	* winsup.h (access_worker): Remove obsolete access_worker declaration.
	*syscalls.cc (access_worker): Move function to fhandler.cc.
	(access): Use fhaccess method.

	* pinfo.cc (_pinfo::set_ctty): Clarify debugging output.
	* sigproc.cc (sig_dispatch_pending): Ditto.
	* syscalls.cc (setsid): Perform minor rearrangement.

2004-01-23  Pierre Humblet <pierre.humblet@ieee.org>

	* fhandler_socket.cc (fhandler_socket::create_secret_event): Avoid
	creating multiple handles. Always allow event inheritance but set the
	handle inheritance appropriately. Improve error handling.
	(fhandler_socket::check_peer_secret_event): Improve error handling.
	(fhandler_socket::close_secret_event): Simply call CloseHandle.
	(fhandler_socket::set_close_on_exec): Set secret event inheritance.

2004-01-23  Christopher Faylor  <cgf@redhat.com>

	* configure.in: Remove NEWVFORK default.
	* configure: Regenerate.
	* dcrt0.cc: Conditionalize vfork stuff throughout.
	* dtable.cc: Ditto.
	* perthread.h: Ditto.
	* pipe.cc (fhandler_pipe::close): Ditto.
	* spawn.cc (spawnve): Ditto.
	* syscalls.cc (setsid): Ditto.
	* exceptions.cc (sigpacket::process): Use macro to refer to vfork pid.

	* debug.cc (verify_handle): Define new function.
	* debug.h (VerifyHandle): Define new macro.
	(verify_handle): Declare new function
	* fhandler.cc (fhandler_base::dup): Verify that dup'ed handle is not
	supposed to be in use.
	(fhandler_base::set_inheritance): Ditto.
	(fhandler_base::fork_fixup): Ditto.
	* fhandler_socket.cc (fhandler_socket::dup): Ditto.
	* fhandler_tty.cc (fhandler_tty_slave::open): Ditto.
	* net.cc (set_socket_inheritance): Ditto.
	* pinfo.cc (pinfo_fixup_after_exec): Ditto.
	* sigproc.cc (proc_subproc): Ditto.
	(sig_send): Ditto.
	* spawn.cc (spawn_guts): Ditto.
	* thread.cc (pthread::init_mainthread): Ditto.
	* pipe.cc (fhandler_pipe::close): Close read_state with
	ForceCloseHandle since it was protected.
	(fhandler_pipe::fixup_after_exec): Protect read_state handle.
	(fhandler_pipe::dup): Correctly close open handles on error condition.
	Verify that dup'ed handle is not supposed to be in use.
	(fhandler_pipe::create): Protect read_state.

2004-01-23  Christopher Faylor  <cgf@redhat.com>

	* exceptions.cc (sig_handle_tty_stop): Fix boneheaded mistake by using
	correct check for parent state rather than inverted check mistakenly
	introduced on 2003-09-15.

2004-01-22  Brian Ford  <ford@vss.fsi.com>

	* fhandler_serial.cc (fhandler_serial::raw_write): Prevent a deadlock
	when the input buffer overflows.
	(fhandler_serial::raw_read): Correct to print the actual error and only
	call PurgeComm when necessary.

2004-01-22  Christopher Faylor  <cgf@redhat.com>

	* dcrt0.cc (reent_data): Make global.
	* cygwin.din: Reexport reent_data.

2004-01-22  Christopher Faylor  <cgf@redhat.com>

	* cygtls.cc (_threadinfo::remove): Don't assume that we are removing
	_my_tls.
	* exceptions.cc (setup_handler): Improve debugging output.
	(call_signal_handler_now): Remove ill-advised debugger call.
	* sigproc.cc (sigcomplete_main): Delete.
	(sig_send): Honor FIXME and avoid using main thread's completion event
	for everything or suffer races.
	(pending_signals::add): Default stored mask to current process mask
	rather than mask at time of signal send.
	(wait_sig): Add debugging output.
	* sigproc.h (sigpacket::mask_storage): Delete.

2004-01-22  Christopher Faylor  <cgf@redhat.com>

	* fhandler.cc (fhandler_base::open): Revert isfs change.

2004-01-21  Christopher Faylor  <cgf@redhat.com>

	* devices.in: Change raw com device to more correct form.

2004-01-21  Christopher Faylor  <cgf@redhat.com>

	* fhandler.cc (fhandler_base::open): Use major numbers rather than
	device numbers to control special behavior for devices which take
	units.
	* fhandler_raw.cc (fhandler_dev_raw::writebuf): Ditto.
	(fhandler_dev_raw::fstat): Ditto.
	(fhandler_dev_raw::open): Ditto.
	(fhandler_dev_raw::ioctl): Ditto.

2004-01-21  Nicholas Wourms  <nwourms@netscape.net>

	* signal.cc (sigaction): Fix if-statement typo.

2004-01-21  Christopher Faylor  <cgf@redhat.com>

	* cygtls.cc (handle_threadlist_exception): Change logic, improve
	debugging output.

2004-01-21  Christopher Faylor  <cgf@redhat.com>

	* fhandler_tty.cc (fhandler_tty::ioctl): Semi-revert 2003-09-26 change
	for TIOCSWINSZ.  It is not an error for ioctl_request_event to be
	missing.

2004-01-20  Christopher Faylor  <cgf@redhat.com>

	* sigproc.cc (pending_signals::save): New function.
	(pending_signals::restore): Ditto.
	(sig_clear): Save/restore current queue pointer.
	(wait_sig): Delete signals marked as such.
	* sigproc.h (__SIGDELETE): New enum.

2004-01-20  Christopher Faylor  <cgf@redhat.com>

	* include/cygwin/version.h: Bump DLL minor number to 8.

	* cygmalloc.h: Make more concessions to attempts to get debugging
	malloc working.
	* debug.h: Ditto.
	* dlmalloc.cc: Ditto.
	* dlmalloc.h: Ditto.
	* malloc_wrapper.cc: Ditto.

	* perthread.h (perthread::create): Use calloc to ensure zeroed memory.

2004-01-20  Christopher Faylor  <cgf@redhat.com>

	* sec_acl.cc (setacl): Make sure sd_ret is large enough.

2004-01-19  Christopher Faylor  <cgf@redhat.com>

	* sigproc.cc (sigproc_terminate): Don't close sendsig handle when
	execing since we're not closing what we think we're closing.
	(sig_send): Improve debugging when exiting due to no_signals_available.

	* wincap.h (wincaps::cant_debug_dll_entry): New element.
	* wincap.cc: Implement above element throughout.
	* dcrt0.cc (initial_env): Accommodate changes necessary to allow
	initial debugging for systems which do not allow debugging in
	dll_entry.
	(dll_crt0_0): Add initial_env call back here.

	* Makefile.in (install-man): Use mandir as target for installation.

2004-01-19  Christopher Faylor  <cgf@redhat.com>

	* include/cygwin/version.h: Bump DLL minor number to 7 (should have been
	done earlier).

2004-01-19  Christopher Faylor  <cgf@redhat.com>

	* cygwin/include/signal.h: Add copyright notice.

	* cygwin.din: Make clock SIGFE.  Add clock_gettime, sigwaitinfo,
	timer_create, timer_delete, timer_settime.
	* include/cygwin/version.h: Reflect above additions.
	* fork.cc (fork_child): Call fixup_timers_after_fork.
	* signal.cc (sigwait): Remove unused variable.
	* timer.cc: New file.
	(clock_gettime): Define new function.
	(timer_tracker): Define new struct used by timer functions.
	(timer_tracker::timer_tracker): New function.
	(to_us): New function.
	(timer_thread): New function.
	(timer_tracker::settime): New function.
	(timer_create): New function.
	(timer_settime): New function.
	(timer_delete): New function.
	(fixup_timers_after_fork): New function.
	* cygthread.cc: Bump thread count.

2004-01-17  Christopher Faylor  <cgf@redhat.com>

	* signal.cc (sigwaitinfo): Define new function.
	(sigwait): Redefine based on sigwaitinfo.
	* include/cygwin/signal.h (sigwaitinfo): Declare.
	(sigwait): Ditto.

2004-01-17  Christopher Faylor  <cgf@redhat.com>

	* dtable.cc (dtable::vfork_parent_restore): Avoid double close of ctty
	when ctty == ctty_on_hold.

2004-01-16  Christopher Faylor  <cgf@redhat.com>

	* cygtls.h (_threadinfo::threadkill): New element.
	(_threadinfo::set_threadkill): Declare new function.
	(_threadinfo::reset_threadkill): Declare new function.
	* dcrt0.cc (dcrt0_1): Call here so that it will be possible to attach
	to running process with #(*& Windows Me/9x.
	(initial_env): Try to initialize strace if uninitialized.
	* gendef: Don't zero signal if threadkill is set since that will happen
	in the called function.
	* signal.cc (sigwait): Ensure cleanup in error conditions.
	* sigproc.cc (sig_send): Clear packet mask storage.
	(wait_subproc): Fill in child exit code in siginfo_t structure.
	* thread.cc (pthread_kill): Set threadkill flag.
	* tlsoffsets.h: Regenerate.

2004-01-16  Christopher Faylor  <cgf@redhat.com>

	Throughout, use siginfo_t to fill out all signal information for
	"kernel" signals.
	* cygtls.h (_threadinfo::set_siginfo): Declare new function.
	* cygtls.cc (_threadinfo::set_siginfo): Define new function.
	* dcrt0.cc (do_exit): Accommodate siginfo_t considerations.
	* exceptions.cc (handle_exceptions): Ditto.
	(sig_handle_tty_stop): Ditto.
	(ctrl_c_handler): Use killsys() to send signal.
	(sigpacket::process): Rename from sig_handle.  Use siginfo_t field from
	sigpacket for everything.
	(tty_min::kill_pgrp): Accommodate siginfo_t considerations.
	(fhandler_termios::bg_check): Ditto.
	* fhandler_tty.cc (fhandler_tty_slave::ioctl): Use killsys() to send signal.
	* signal.cc (kill_worker): Rewrite to use siginfo_t second argument.
	(kill_pgrp): Ditto.
	(kill0): Define new function pulled from kill().
	(kill): Rewrite as frontend to kill0.
	(killsys): Define new function.
	* sigproc.cc (sigelem): Eliminate.
	(sigpacket): Move to sigproc.h.  Subsume sigelem.
	(pending_signals): Use sigpacket rather than sigelem for everything.
	(sig_clear): Ditto.
	(wait_sig): Ditto.
	(sig_send): Rewrite to use siginfo_t argument.
	(sig_send): New function wratpper to sig_send with siginfo_t argument.
	(wait_subproc): Accommodate siginfo_t considerations.
	* thread.cc (pthread_kill): Ditto.
	* sigproc.h (sigpacket): Move here.
	(sigpacket::process): Declare "new" function.
	(sig_handle): Eliminate declaration.
	(sig_send): Declare with new paramaters.
	(killsys): Declare new function.
	(kill_pgrp): Declare.
	* winsup.h: Move some signal-specific stuff to sigproc.h.
	* include/cygwin/signal.h: Tweak some siginfo_t stuff.

2004-01-16  Christopher Faylor  <cgf@redhat.com>

	* fhandler_console.cc (fhandler_console::close): Remove obsolete test
	for vfork_cleanup.
	* pipe.cc (fhandler_pipe::close): Add comment.

2004-01-16  Christopher Faylor  <cgf@redhat.com>

	* cygheap.cc (init_cygheap::close_ctty): Don't NULL ctty if it is still
	active.

2004-01-16  Christopher Faylor  <cgf@redhat.com>

	* dtable.cc (dtable::vfork_parent_restore): Store ctty_on_hold prior to
	calling close_all_files since it will be zeroed.

2004-01-15  Christopher Faylor  <cgf@redhat.com>

	* gentls_offsets: Reinstate unlink of temp files.

2004-01-14  Christopher Faylor  <cgf@redhat.com>

	* fhandler_console.cc (fhandler_console::close): Fix debugging output.
	(fhandler_console::fixup_after_fork): Decrement open_fhs prior to call
	to fhandler_console::open since this would cause incrementing too much
	incrementing in child processes.  (Probably needs to be handled more
	elegantly someday)
	(fhandler_console::fixup_after_exec): Ditto.

2004-01-14  Christopher Faylor  <cgf@redhat.com>

	* cygtls.h (_threadinfo::call): Remove regparm declaration to work
	around compiler bug.

2004-01-13  Christopher Faylor  <cgf@redhat.com>

	* autoload.cc (TryEnterCriticalSection): Remove.
	* dcrt0.cc (dll_crt0_0): Delete inappropriate setting of
	_my_tls.stackptr to NULL since it has really bad consequences.  Make
	'si' an automatic variable.

2004-01-13  Christopher Faylor  <cgf@redhat.com>

	* cygtls.cc (_threadinfo::init_thread): Correct thinko which caused
	thread list to be allocated every time.
	* cygtls.h (CYGTLS_PADSIZE): Define as const int.
	* sync.h: Make multiple inclusion safe.
	(muto::next): Eliminate.
	(muto::exiting_thread): New variable.
	(muto::set_exiting_thread): New function.
	(new_muto): Change to use different section for mutos since c++ give
	inexplicable warning in some cases otherwise.
	(new_muto1): Ditto.
	* dcrt0.cc (do_exit): Call muto::set_exiting_thread here.
	* sync.cc (muto_start): Eliminate.
	(muto::acquire): Always give exiting thread a lock.  Never give thread
	a lock if exiting.
	(muto::release): Ditto for releasing.
	* dtable.cc (dtable::init_lock): Unline function and define here.
	* dtable.h (lock_cs): Define as a muto since critical sections seem to
	work oddly on Windows Me.
	(lock): Accommodate switch to muto.
	(unlock): Ditto.
	* exceptions.cc (setup_handler): Don't worry about acquiring mutos
	since that hasn't mattered for a long time.
	(signal_exit): Ditto: muto stuff will be handled automatically on exit
	now.

2004-01-12  Christopher Faylor  <cgf@redhat.com>

	* Makefile.in (DLL_IMPORTS): Link advapi32 to ensure proper DLL
	initialization.
	* autoload.cc (RegCloseKey): Arbitrarily choose this function as a
	"seed" to pull the advapi32 link library in.  So, comment out the
	autoloading.
	* cygtls.cc (_threadinfo::init_thread): Just clear CYGTLS_PADSIZE.
	(_threadinfo::remove): Add debugging.
	(_threadinfo::find_tls): Ditto.
	* cygtls.h (_threadinfo::padding): Make zero length (for now?).
	* dcrt0.cc (dll_crt0_0): Move more initialization here from dll_crt0_1.
	(dll_crt0_1): See above.
	* dtable.h (dtable::lock): Remove commented out critical section
	locking.
	* dtable.h (dtable::init_lock): Remove commented out critical section
	locking.
	* dtable.h (dtable::unlock): Remove commented out critical section
	locking.
	* exceptions.cc (interruptible): bool'ize.
	* init.cc (threadfunc_fe): Revert to storing threadfunc at stack
	bottom.
	(munge_threadfunc): Ditto.  Avoid adding overhead to
	calibration_thread.
	(prime_threads): Don't initialize tls stuff.
	(dll_entry): Make minor change to initialization order.
	* tlsoffsets.h: Regenerate.

	* sigproc.cc (wait_sig): Add sanity check for end of process thread
	exit.

	* select.h: Make minor formatting change.

2004-01-10  Christopher Faylor  <cgf@redhat.com>

	* Makefile.in: Add still more -fomit-frame-pointer functions.
	* dtable.h (dtable::lock): New function.
	(dtable::unlock): New function.
	(dtable::init_lock): New function.
	* cygheap.h (HEAP_TLS): Declare new enum value.
	(init_cygheap::threadlist): Declare new array.
	(init_cygheap::sthreads): Declare new variable.
	(cygheap_fdmanip::~cygheap_fdmanip): Use new dtable lock/unlock
	functions.
	(cygheap_fdnew::cygheap_fdnew): Ditto.
	(cygheap_fdget::cygheap_fdget): Ditto.
	* dtable.cc (dtable_init): Initialize fdtab critical section.
	(dtable::fixup_after_fork): Ditto.
	(dtable::fixup_after_exec): Ditto.
	(dtable::dup2): Use lock/unlock calls to protect access to fdtab.
	(dtable::find_fifo): Ditto.
	(dtable::fixup_before_fork): Ditto.
	(dtable::fixup_before_exec): Ditto.
	(dtable::set_file_pointers_for_exec): Ditto.
	(dtable::vfork_child_dup): Ditto.
	(dtable::vfork_parent_restore): Ditto.
	* syscalls.cc (close_all_files): Ditto.
	* sync.h (muto::acquired): Declare new function.
	(new_muto1): Declare new macro used to specify name of muto storage.
	* sync.cc (muto::acquired): Define new function.

	* cygthread.cc (cygthread::stub): Remove signal chain removal call
	since it is handled during initialization now.
	* cygthread.cc (cygthread::simplestub): Remove signal chain removal
	call since it is handled during initialization now.
	* cygtls.cc (sentry): New class used for locking.  Use throughout.
	(_threadinfo::reset_exception): Don't pop stack.
	(_threadinfo::find_tls): Move from exceptions.cc.
	(_threadinfo::init_thread): Initialize array of threads rather than
	linked list.  Take second argument indicating thread function for this
	thread.
	(_threadinfo::remove): Search thread array rather than linked list.
	Use sentry to lock.  Only unlock if we got the lock.
	(_threadinfo::find_tls): Ditto for first two.
	(handle_threadlist_exception): Handle exceptions when manipulating the
	thread list in case of premature thread termination.
	(_threadinfo::init_threadlist_exceptions): Ditto.
	* cygtls.h (TLS_STACK_SIZE): Decrease size.
	(_threadinfo::padding): Add element to avoid overwriting lower part of
	stack.
	(_threadinfo::remove): Add a "wait" argument to control how long we
	wait for a lock before removing.
	* exceptions.cc (init_exception_handler): Make global.  Take argument
	to control exception handler being set.
	(ctrl_c_handler): Wait forever when removing self from signal chain.
	(_threadinfo::find_tls): Move to cygtls.cc.
	(sig_handle): Reorganize detection for thread-specific signals.
	* heap.cc (heap_init): Rework slightly.  Make fatal error more verbose.
	Remove malloc initialization since it can't happen during dll attach.
	* init.cc (search_for): Move address to search for on stack here.
	(threadfunc_ix): Ditto for stack offset.  Make shared so that stack
	walk potentially only has to be done once when cygwin processes are
	running.
	(threadfunc_fe): Use standard tls to store thread function (may change
	back later).
	(calibration_thread): New function.  Potentially called to find
	threadfunc_ix.
	(munge_threadfunc): Search for "search_for" value on stack.  Output
	warning when thread func not found on stack.  Use standard tls to store
	thread function.
	(prime_threads): New function.  Called to prime thread front end.
	(dll_entry): Call dll_crt0_0 here when DLL_PROCESS_ATTACH.  Call
	prime_threads here.  Try to remove thread from signal list here.
	* sigproc.cc (wait_sig): Initialize threadlist exception stuff here.
	* thread.cc (pthread::exit): Pass argument to signal list remove
	function.
	* thread.h: Remove obsolete *ResourceLock defines.

	* tlsoffsets.h: Regenerate.

	* winsup.h (spf): Define temporary debug macro to be deleted later.

	* dcrt0.cc (dll_crt0_0): New function, called during DLL
	initialization.  Mainly consists of code pulled from dll_crt0_1.
	(dll_crt0_1): See above.
	(_dll_crt0): Wait for initial calibration thread to complete, if
	appropriate.  Move some stuff to dll_crt0_0.
	(initialize_main_tls): Accommodate argument change to
	_thread_info::init_thread.
	* fork.cc (fork_child): Ditto.
	(sync_with_child): Fix debug message.
	* external.cc (cygwin_internal): Remove special considerations for
	uninitialized dll since initialization happens during dll attach now.

	* dlfcn.cc (dlopen): Remove obsolete *ResourceLock calls.
	(dlclose): Ditto.

2004-01-05  Christopher Faylor  <cgf@redhat.com>

	* cygheap.h (init_cygheap::close_ctty): Declare new function.
	* cygheap.cc (init_cygheap::close_ctty): Define new function.
	* syscalls.cc (close_all_files): Use close_ctty.
	(setsid): Ditto.

	* cygthread.cc (cygthread::stub): Remove exception initialization.
	* cygthread.cc (cygthread::stub): Remove exception initialization.
	(cygthread::simplestub): Ditto.
	* thread.cc (pthread::thread_init_wrapper): Ditto.
	* cygtls.cc (_last_thread): Make static.
	(_threadinfo::call2): Initialize exception handler here.
	(_threadinfo::find_tls): Move here.
	* exceptions.cc (_threadinfo::find_tls): Move.

	* dcrt0.cc (__api_fatal): Add prefix info to message here rather than
	including it in every call to function.
	* winsup.h (api_fatal): Accommodate above change.
	* debug.cc (add_handle): Don't do anything if cygheap not around.
	(mark_closed): Ditto.

	* dll_init.cc (dll_list::detach): Fix debug output.
	* fork.cc (sync_with_child): Ditto.
	(vfork): Improve debug output.
	* heap.cc (heap_init): Ditto.

	* exceptions.cc (try_to_debug): Clarify message when debugger attaches.

2004-01-03  Christopher Faylor  <cgf@redhat.com>

	* exceptions.cc (_threadinfo::interrupt_now): Avoid double call to
	sigdelayed.
	* pinfo.cc (_pinfo::commune_send): Avoid inexplicable test which caused
	most pids to be shown as "<defunct>" on Win9x.

2004-01-02  Christopher Faylor  <cgf@redhat.com>

	* cygheap.h (init_cygheap): Play more vfork shell games and move
	ctty_on_hold and open_fhs_on_hold (back) here.
	* dcrt0.cc (_dll_crt0): Just set impure_ptr_ptr here and let later
	initialization deal with tls.
	* dtable.cc (dtable::vfork_child_fixup): Move ctty considerations here.
	(dtable:vfork_parent_restore): And here.
	* fork.cc (vfork): Reflect change to ctty handling.
	* perthread.h (vfork_save::fhctty): Eliminate.

	* cygwin.din: Make more exports NOSIGFE that will never be interrupted
	by a signal.

	* init.cc (dll_entry): Set stackptr to NULL to catch problems earlier.
