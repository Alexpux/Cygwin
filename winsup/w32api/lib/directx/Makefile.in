# @configure_input@
#
#
# Makefile.in
#
# This file is part of a free library building Windows NT drivers.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

srcdir = @srcdir@
top_srcdir = @top_srcdir@
top_builddir = @top_builddir@

VPATH = @srcdir@

include ${top_builddir}/Makefile.comm

# Headers
#
HEADERS = $(notdir $(wildcard ${top_srcdir}/include/directx/*.h))

# Libraries
#
DEF_FILES = $(notdir $(wildcard ${srcdir}/*.def))
DIST_C_FILES = $(notdir $(wildcard ${srcdir}/*.c))
DIST_H_FILES = $(notdir $(wildcard ${srcdir}/*.h))

LIBS = \
  libd3d8.a libd3d9.a libd3dim.a libd3drm.a libd3dx8d.a libd3dx9d.a \
  libd3dxof.a libddraw.a libdinput.a libdinput8.a libdmoguids.a \
  libdplayx.a libdpnaddr.a libdpnet.a libdpnlobby.a libdpvoice.a \
  libdsetup.a libdsound.a libdxerr8.a libdxerr9.a libdxguid.a \
  libksproxy.a libksuser.a libmsdmo.a libstrmiids.a

DINPUT_OBJS = \
  dinput_joy.o dinput_joy2.o dinput_kbd.o dinput_mouse.o dinput_mouse2.o

DISTFILES = Makefile.in $(DEF_FILES) $(DIST_C_FILES) $(DIST_H_FILES)

.NOTPARALLEL:

# Targets: (note that 'all-default' is a redirection from 'all',
# which is the primary default target identified in the included
# common makefile fragment, ${top_builddir}/Makefile.comm
#
all-default: $(LIBS)

TEST_OPTIONS = \
  $(ALL_CFLAGS) -Wall -pedantic -Wsystem-headers \
  -c ${srcdir}/test.c -o test.o
.PHONY: test
test:
	@echo "Testing directx..."
	@for lang in c c++ objective-c; do \
	  echo "$$lang..."; \
	  $(CC) -x$$lang $(TEST_OPTIONS); \
	  echo "$$lang UNICODE..."; \
	  $(CC) -x$$lang -DUNICODE $(TEST_OPTIONS); \
	done
	@echo "windres..."
	$(WINDRES) --include-dir ${INCDIR} -i ${srcdir}/res.rc -o test.o
	@echo "windres UNICODE..."
	$(WINDRES) --define UNICODE --include-dir ${INCDIR} -i ${srcdir}/res.rc -o test.o
	rm -f test.o

# Rules
#
libdxerr8.a: dxerr8.o dxerr8w.o
	$(AR) r $@ dxerr8.o dxerr8w.o
	$(RANLIB) $@

libdxerr9.a: dxerr9.o dxerr9w.o
	$(AR) r $@ dxerr9.o dxerr9w.o
	$(RANLIB) $@

libdinput.a: dinput.def $(DINPUT_OBJS)
	$(DLLTOOL) $(DLLTOOL_FLAGS) --output-lib $@ --def ${srcdir}/dinput.def
	$(AR) r $@ $(DINPUT_OBJS)
	$(RANLIB) $@

libdinput8.a: dinput8.def $(DINPUT_OBJS)
	$(DLLTOOL) $(DLLTOOL_FLAGS) --output-lib $@ --def ${srcdir}/dinput8.def
	$(AR) r $@ $(DINPUT_OBJS)
	$(RANLIB) $@

# Install headers and libraries in a target specified directory.
#
install: install-libraries install-headers

install-libraries: all $(need-DESTDIR-compatibility)
	$(mkinstalldirs) $(DESTDIR)${inst_libdir}
	for file in $(LIBS); do \
	  $(INSTALL_DATA) $$file $(DESTDIR)${inst_libdir}; \
	done

install-headers: $(need-DESTDIR-compatibility)
	$(mkinstalldirs) $(DESTDIR)${inst_includedir}
	for file in $(HEADERS); do \
	  $(INSTALL_DATA) ${top_srcdir}/include/directx/$$file $(DESTDIR)${inst_includedir}; \
	done

# Uninstall headers and libraries from a target specified directory
#
uninstall: uninstall-libraries uninstall-headers

uninstall-libraries: $(need-DESTDIR-compatibility)
	for file in $(LIBS); do \
	  rm -f $(DESTDIR)${inst_libdir}/$$file; \
	done
	rmdir $(DESTDIR)${inst_libdir}

uninstall-headers: $(need-DESTDIR-compatibility)
	for file in $(HEADERS); do \
	  rm -r $(DESTDIR)${inst_includedir}/$$file; \
	done
	rmdir $(DESTDIR)${inst_includedir}

dist:
	mkdir ${distdir}/include/directx
	chmod 755 ${distdir}/include/directx
	for file in $(HEADERS); do \
	  cp -p ${top_srcdir}/include/directx/$$file ${distdir}/include/directx; \
	done
	mkdir ${distdir}/lib/directx
	chmod 755 ${distdir}/lib/directx
	for file in $(DISTFILES); do \
	  cp -p ${srcdir}/$$file ${distdir}/lib/directx; \
	done

# Makefile.in: end of file
