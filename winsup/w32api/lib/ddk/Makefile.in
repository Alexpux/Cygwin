# @configure_input@
#
#
# Makefile.in
#
# This file is part of a free library building Windows NT drivers.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

srcdir = @srcdir@
top_srcdir = @top_srcdir@
top_builddir = @top_builddir@

VPATH = @srcdir@

include ${top_builddir}/Makefile.comm

# Headers
#
HEADERS = $(notdir $(wildcard ${top_srcdir}/include/ddk/*.h))

# Libraries
#
DEF_FILES = $(notdir $(wildcard ${srcdir}/*.def))
IMPLIBS = $(addprefix lib,$(subst .def,.a,$(DEF_FILES)))
LIBS = $(IMPLIBS)

DISTFILES = Makefile.in $(DEF_FILES)

.NOTPARALLEL:

# Targets: (note that 'all-default' is a redirection from 'all',
# which is the primary default target identified in the included
# common makefile fragment, ${top_builddir}/Makefile.comm
#
all-default: $(LIBS)

TEST_OPTIONS = \
  $(ALL_CFLAGS) -Wall -pedantic -Wsystem-headers \
  -c ${srcdir}/test.c -o test.o

.PHONY: check test
check test:
	@echo "Testing ddk..."
	@for lang in c c++ objective-c; do \
	  echo "$$lang..."; \
	  $(CC) -x$$lang $(TEST_OPTIONS); \
	  echo "$$lang UNICODE..."; \
	  $(CC) -x$$lang -DUNICODE $(TEST_OPTIONS); \
	done
	@echo "windres..."
	$(WINDRES) --include-dir ${INCDIR} -i ${srcdir}/res.rc -o test.o
	@echo "windres UNICODE..."
	$(WINDRES) --define UNICODE --include-dir ${INCDIR} -i ${srcdir}/res.rc -o test.o
	rm -f test.o

# Rules
#
# Install headers and libraries in a target specified directory.
#
install: install-libraries install-headers

install-libraries: all $(need-DESTDIR-compatibility)
	$(mkinstalldirs) $(DESTDIR)${inst_libdir}
	for file in $(LIBS); do \
	  $(INSTALL_DATA) $$file $(DESTDIR)${inst_libdir}; \
	done

ddk_includedir = ${inst_includedir}/ddk

install-headers: $(need-DESTDIR-compatibility)
	$(mkinstalldirs) $(DESTDIR)${ddk_includedir}
	for file in $(HEADERS); do \
	  $(INSTALL_DATA) ${top_srcdir}/include/ddk/$$file $(DESTDIR)${ddk_includedir}; \
	done

# Uninstall headers and libraries from a target specified directory
#
uninstall: uninstall-libraries uninstall-headers

uninstall-libraries: $(need-DESTDIR-compatibility)
	for file in $(LIBS); do \
	  rm -f $(DESTDIR)${inst_libdir}/$$file; \
	done
	rmdir $(DESTDIR)${inst_libdir}

uninstall-headers: $(need-DESTDIR-compatibility)
	for file in $(HEADERS); do \
	  rm -r $(DESTDIR)${ddk_includedir}/$$file; \
	done
	rmdir $(DESTDIR)${ddk_includedir}

dist:
	mkdir ${distdir}/include/ddk
	chmod 755 ${distdir}/include/ddk
	for file in $(HEADERS); do \
	  cp -p ${top_srcdir}/include/ddk/$$file ${distdir}/include/ddk; \
	done
	mkdir ${distdir}/lib/ddk
	chmod 755 ${distdir}/lib/ddk
	for file in $(DISTFILES); do \
	  cp -p ${srcdir}/$$file ${distdir}/lib/ddk; \
	done

# Makefile.in: end of file
