@chapter Who's behind the project?

@strong{(Please note that if you have cygwin-specific questions, all of these
people will appreciate it if you use the cygwin mailing lists rather than
sending personal email.)}

Chris Faylor is behind many of the recent changes in Cygwin.  Prior to
joining Cygnus, he contributed significant fixes to the process control
and environ code, reworked the strace mechanism, and rewrote the
signal-related code from scratch as a Net contributor.  In addition to
continuing to make technical contributions, Chris is also currently the
group's manager.

Corinna Vinschen has contributed several useful fixes to the path
handling code, console support, improved security handling, and raw
device support.  Corinna is currently employed by Red Hat as a
GDB/Cygwin engineer.

DJ Delorie has done important work in profiling Cygwin,
worked on the Dejagnu automated testing framework, merged the dlltool
functionality into ld, wrote a good deal of the Cygwin Users' Guide,
authored the cygcheck utility, and made automated snapshots available
from our project WWW page.  DJ is currently employed by Red Hat as
a GCC engineer.

Egor Duda has contributed many useful fixes.  He is responsible for
Cygwin's ability to start a debugger on detection of a fatal error
as well as produce core dumps.

Robert Collins has contributed many improvements to thread handling
as well as generic fixes to cygwin itself.

Kazuhiro Fujieda has contributed many bug fixes and bug reports.

Earnie Boyd has contributed many bug fixes and is the mingw and w32api
maintainer.

David Starks-Browning is our dedicated FAQ maintainer.

Geoffrey Noer took over the Cygwin project from its initial author Steve
Chamberlain in mid-1996.  As maintainer, he produced Net releases beta
16 through 20; made the development snapshots; worked with Net
contributors to fix bugs; made many various code improvements himself;
wrote a paper on Cygwin for the 1998 Usenix NT Symposium; authored the
project WWW pages, FAQ, README; etc.  Geoffrey is not currently employed
by Red Hat.

Steve Chamberlain designed and implemented
Cygwin in 1995-1996 while working for Cygnus.  He worked with the Net
to improve the technology, ported/integrated many of the user tools
for the first time to Cygwin, and produced all of the releases up to
beta 14.  Steve is not currently employed by Red Hat.

Marco Fuykschot and Peter Boncz of Data Distilleries contributed nearly
all of the changes required to make Cygwin thread-safe.  They also
provided the pthreads interface.

Sergey Okhapkin has been an invaluable Net contributor.  He implemented
the tty/pty support, has played a significant role in revamping signal
and exception handling, and has made countless contributions throughout
the library.  He also provided binaries of the development snapshots to
the Net after the beta 19 release.

Mumit Khan has been most helpful on the EGCS end of things, providing
quite a large number of stabilizing patches to the compiler tools for
the B20 release.

Philippe Giacinti contributed the implementation of dlopen, dlclose,
dlsym, dlfork, and dlerror in Cygwin.

Ian Lance Taylor did a much-needed rework of the path handling code for
beta 18, and has made many assorted fixes throughout the code.  Jeremy
Allison made significant contributions in the area of file handling and
process control, and rewrote select from scratch.  Doug Evans rewrote
the path-handling code in beta 16, among other things.  Kim Knuttila and
Michael Meissner put in many long hours working on the now-defunct
PowerPC port.  Jason Molenda and Mark Eichin have also made important
contributions.

Please note that all of us working on Cygwin try to
be as responsive as possible and deal with patches and questions as we
get them, but realistically we don't have time to answer all of the
email that is sent to the main mailing list.  Making Net releases of the
Win32 tools and helping people on the Net out is not our primary job
function, so some email will have to go unanswered.

Many thanks to everyone using the tools for their many contributions in
the form of advice, bug reports, and code fixes.  Keep them coming!
